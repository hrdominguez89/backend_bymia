security:
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ALLOWED_TO_SWITCH ]
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: false
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        users:
            entity:
                class: 'App\Entity\User'
                property: 'email'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/*
            lazy: true
            provider: users
            anonymous: true
            form_login:
                check_path: app_security_login
                login_path: app_security_login
                default_target_path: app_homepage
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: app_security_logout
                target: app_security_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/security/*, roles: PUBLIC_ACCESS }
        - { path: ^/reset-password/*, roles: PUBLIC_ACCESS }
        - { path: ^/*, roles: [ ROLE_SUPER_ADMIN ] } #requires_channel: https
